#+TITLE:js_notes
#+CREATOR: saketh

can get SSL for free with "Let's Encrypt"
|---------------------------------------------------+------------------------------------------------|
| command                                           | function                                       |
|---------------------------------------------------+------------------------------------------------|
| ./mongo --dbpath ~/mongo-data                     | run mongo server                               |
| npm run dev                                       | run express and react server at the same time. |
| npm install                                       | install all the node modules.                  |
| npm init                                          | make current dir into a project.               |
| npx create-react-app my-app --template typescript | create typescript app.                         |
| npm list -g                                       | list globally installed modules.               |
|---------------------------------------------------+------------------------------------------------|

*typescript*
|---------------------------------------------+----------|
| command                                     | function |
|---------------------------------------------+----------|
| npm init -y                                 |          |
| npm i --save-dev typescript ts-node nodemon |          |
| npx tsc --init                              |          |
|                                             |          |
|                                             |          |


|------------------------------------+------------------------|
| *code*                             | *function*             |
|------------------------------------+------------------------|
| array = structuredClone(array1)    | clone array            |
| array = [...array1]                |                        |
|------------------------------------+------------------------|
| array = new Array(len).fill(value) | init array with value. |
| let a: Array<Array<number>>        | defign 2d num array    |
| let a: number[][]                  |                        |
|------------------------------------+------------------------|
| a.push(value)                      | add value to end       |
| a.shift()                          | remove first value     |
| a.unshift(value)                   | add value to front     |
| a.pop()                            | remove last value      |
|------------------------------------+------------------------|






*making a website from scratch*
adding npm modules with npm use package parcel

$ npm install --save-dev parcel

in package.json

  "source": "index.html",
  "scripts": {
    "start": "parcel",
    "build": "parcel build"
  },



import statements must come before require() statements. why?

optional tsconfig
{
  "compilerOptions": {
    "target": "es6",
    "module": "commonjs",
    "declaration": true,
    "sourceMap": true,
    "outDir": "dist",
    "rootDir": "./",
    "strict": true,
    "esModuleInterop": true
  }
}
setting target as es6 helps to support es6 code
setting declaration true generates corresponding '.d.ts' file
setting sourceMap true generates corresponding '.map' file
outDir redirects output structure to the directory
rootDir specifies the root directory of input files
setting strict true enables all strict type-checking options

package.json
{
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "start": "ts-node index.ts",
    "build": "tsc"
  },
}

execute npm run start to start application without compile
execute npm run build then node dist/index.js to compile and run applcation as javascript

https://dev.to/rajat19/create-a-new-node-js-project-in-typescript-nao
https://www.digitalocean.com/community/tutorials/setting-up-a-node-project-with-typescript

scripts:
    "server": "nodemon server/index.js",
    "client": "npm start --prefix front-end",
    "dev": "concurrently \"npm run server\" \"npm run client\" "
